<?php namespace Ip; class Request { protected $_SERVER = array(); protected $_POST = array(); protected $_GET = array(); protected $_REQUEST = array(); protected $_COOKIE = array(); protected $controller = null; protected $routePath = null; public function __construct() { $server = $_SERVER; $server['REDIRECT_QUERY_STRING'] = ''; $server['REDIRECT_URL'] = ''; $server['QUERY_STRING'] = ''; $server['REQUEST_URI'] = parse_url(ipConfig()->baseUrl(), PHP_URL_PATH); $this->setServer($server); } public function setPost($post) { $this->_POST = $post; $this->_REQUEST = array_merge($this->_REQUEST, $post); } public function setServer($server) { $this->_SERVER = $server; } public function setQuery($query) { $this->_GET = $query; $this->_REQUEST = array_merge($this->_REQUEST, $query); } public function setRequest($request) { $this->_REQUEST = $request; } public function isGet() { return $this->getMethod() == 'GET'; } public function isPost() { return $this->getMethod() == 'POST'; } public function isAjax() { return strtolower($this->getServer('HTTP_X_REQUESTED_WITH')) == 'xmlhttprequest'; } public function mustBePost() { if (!$this->isPost()) { throw new \Ip\Exception('POST method required.'); } } public function isHttps() { return (isset($this->_SERVER["HTTPS"]) && strtolower($this->_SERVER["HTTPS"]) == "on"); } public function getMethod() { return $this->_SERVER['REQUEST_METHOD']; } public function getQuery($name = null, $default = null) { return $this->getParam($name, $this->_GET, $default); } public function getPost($name = null, $default = null) { return $this->getParam($name, $this->_POST, $default); } public function getRequest($name = null, $default = null) { return $this->getParam($name, $this->_REQUEST, $default); } public function getServer($name = null, $default = null) { return $this->getParam($name, $this->_SERVER, $default); } protected function getParam($name, $values, $default) { if ($name === null) { return $values; } if (!array_key_exists($name, $values)) { return $default; } return $values[$name]; } public function getUrl() { $pageURL = 'http'; if (isset($this->_SERVER["HTTPS"]) && strtolower($this->_SERVER["HTTPS"]) == "on") { $pageURL .= "s"; } $pageURL .= '://'; if ($this->_SERVER["SERVER_PORT"] != "80" && $this->_SERVER["SERVER_PORT"] != "443") { $pageURL .= $this->_SERVER["SERVER_NAME"] . ":" . $this->_SERVER["SERVER_PORT"] . $this->_SERVER["REQUEST_URI"]; } else { $pageURL .= $this->_SERVER["SERVER_NAME"] . $this->_SERVER["REQUEST_URI"]; } return $pageURL; } public function getRelativePath() { $basePath = parse_url(ipConfig()->baseUrl(), PHP_URL_PATH); $requestPath = parse_url($this->_SERVER["REQUEST_URI"], PHP_URL_PATH); if (strpos($requestPath, $basePath) !== 0) { if ($requestPath == rtrim($basePath, '/')) { return ''; } return $requestPath; } $relativePath = substr($requestPath, strlen($basePath)); if (strpos($relativePath, 'index.php') === 0) { $relativePath = substr($relativePath, 9); } return $relativePath ? ltrim(urldecode($relativePath), '/') : ''; } public function _setRoutePath($routePath) { $this->routePath = $routePath; } public function getRoutePath() { return $this->routePath; } public function _isWebsiteRoot() { $relativePath = $this->getRelativePath(); if (!$relativePath || (empty($relativePath[0]) || $relativePath[0] == '?' || $relativePath == 'index.php')) { return true; } return false; } } ?>